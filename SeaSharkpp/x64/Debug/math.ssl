# Defines the factorial of x
def Factorial(x)
{
	result = 1
	i = 2
	while(i != x + 1)
	{
		result = result * i
		i = i + 1
	}
	return result
}

# Defines x raised to the yth power where y is an integer
def intPow(x, y)
{
	result = 1
	i = 0
	while(i != y)
	{
		result = result * x
		i = i + 1
	}
	return result
}

# Input is in radians
# Uses the taylor series for sin(x) to approximate sin(x) to 15 iterations
def sin(x)
{
	result = 0
	i = 0
	while(i != 15)
	{
		num = 2 * i + 1
		pow = intPow(x, num)
		fact = Factorial(num)
		diff = pow / fact
		if(i % 2 == 0)
		{
			result = result + diff
		}
		if(i % 2 == 1)
		{
			result = result - diff
		}
		i = i + 1
	}
	return result
}

# Input is in radians
# Uses the taylor series for cos(x) to approximate cos(x) to 15 iterations
def cos(x)
{
	result = 1
	i = 1
	while(i != 15)
	{
		num = 2 * i
		pow = intPow(x, num)
		fact = Factorial(num)
		diff = pow / fact
		if(i % 2 == 0)
		{
			result = result + diff
		}
		if(i % 2 == 1)
		{
			result = result - diff
		}
		i = i + 1
	}
	return result
}